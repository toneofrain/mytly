buildscript {
	ext {
		queryDslVersion = "5.0.0"
		restdocsApiSpecVersion = '0.16.0'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.12-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'

	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'

	id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
	id 'org.hidetake.swagger.generator' version '2.18.2'
}

jar {
	enabled = false
}

group = 'dev.saintho'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation (
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'org.springframework.boot:spring-boot-starter-validation',
			'org.springframework.boot:spring-boot-starter-web',

			'com.google.code.gson:gson:2.10.1',
			'com.google.guava:guava:31.1-jre',

			"com.querydsl:querydsl-jpa:${queryDslVersion}",

			'org.springdoc:springdoc-openapi-ui:1.6.12'
	)

	compileOnly (
			'org.projectlombok:lombok'
	)

	runtimeOnly (
			'com.h2database:h2',
			'com.mysql:mysql-connector-j'
	)

	annotationProcessor (
			'org.projectlombok:lombok',
			"com.querydsl:querydsl-apt:${queryDslVersion}"
	)

	testImplementation (
			'org.springframework.boot:spring-boot-starter-test',

			'org.springframework.restdocs:spring-restdocs-mockmvc',
			"com.epages:restdocs-api-spec-mockmvc:${restdocsApiSpecVersion}"
	)
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(GenerateSwaggerUI) {
	dependsOn 'openapi3'

	delete file('src/main/resources/static/docs/')
	copy {
		from "build/resources/main/static/docs"
		into "src/main/resources/static/docs/"

	}
}

bootJar{
	dependsOn(':openapi3')
}

openapi3 {
	outputDirectory = 'build/resources/main/static/docs'
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
